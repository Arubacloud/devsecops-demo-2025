worker_processes auto;

events { worker_connections 1024; }

http {
    # Docker's internal DNS resolver (works only when NGINX runs in Docker)
    resolver 127.0.0.11 ipv6=off valid=30s;

    # ---------- HTTP : Redirect everything to HTTPS ----------
    server {
        listen 80;
        server_name api.devsecops2025-arubacloud.com;
        return 301 https://$host$request_uri;
    }

    # ---------- HTTPS : Proxy to cloudserver ----------
    server {
        listen 443 ssl http2;
        server_name api.devsecops2025-arubacloud.com;

        ssl_certificate     /etc/letsencrypt/live/api.devsecops2025-arubacloud.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.devsecops2025-arubacloud.com/privkey.pem;

        # Use a variable so nginx re-resolves the hostname at runtime
        set $upstream http://cloudserver:8080;

        location / {
            proxy_pass $upstream;

            # pass real client details
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # sensible proxy timeouts (optional)
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}
