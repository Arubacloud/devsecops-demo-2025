name: Build, Push, and Restart Docker Compose

on:
  push:
    branches: [ main ]
    paths: [ 'build/cloudserver/**' ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: amedeopalopoli/devsecopsdemo2025-cloudserver
  IMAGE_TAG: latest

jobs:
  build-push-restart-cloudserver:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import runner DB_PASSWORD into job env
        run: |
          : "${DB_PASSWORD:?DB_PASSWORD missing on runner environment}"
          echo "::add-mask::$DB_PASSWORD"
          echo "DB_PASSWORD=$DB_PASSWORD" >> "$GITHUB_ENV"

      - name: Log in to Docker registry
        run: echo "$DOCKER_PASSWORD" | docker login "${{ env.DOCKER_REGISTRY }}" -u "$DOCKER_USERNAME" --password-stdin

      - name: Prepare .env for compose
        working-directory: build/cloudserver
        run: printf "DB_PASSWORD=%s\n" "$DB_PASSWORD" > .env

      - name: Build Docker image with docker compose
        working-directory: build/cloudserver
        run: docker compose build restapi   # use v2 syntax

      - name: Tag custom image
        run: docker tag cloudserver:latest "${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Push Docker image
        run: docker push "${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Update docker-compose.yml with pushed image
        run: |
          sed -i '0,/image: cloudserver:latest/s|image: cloudserver:latest|image: '"${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"'|' build/cloudserver/docker-compose.yml

      - name: Copy docker-compose.yml and nginx.conf to /home/ubuntu
        run: |
          cp build/cloudserver/docker-compose.yml /home/ubuntu/docker-compose.yml
          cp build/cloudserver/nginx.conf /home/ubuntu/nginx.conf

      # Also ensure /home/ubuntu has DB_PASSWORD available (optional if compose auto-loads .env there)
      - name: Write .env for runtime compose
        working-directory: /home/ubuntu
        run: printf "DB_PASSWORD=%s\n" "$DB_PASSWORD" > .env

      - name: Restart docker compose
        working-directory: /home/ubuntu
        run: |
          docker compose down
          docker compose up -d
