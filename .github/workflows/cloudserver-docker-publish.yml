name: Build, Push, and Restart Docker Compose

on:
  push:
    branches: [ main ]
    paths: [ 'build/cloudserver/**' ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: amedeopalopoli/devsecopsdemo2025-cloudserver
  IMAGE_TAG: latest

jobs:
  build-push-restart-cloudserver:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Import env vars from the runner service (Runner.Listener) into this job
      - name: Import runner environment variables
        shell: bash
        run: |
          set -euo pipefail
          PID="$(pgrep -f 'Runner.Listener' | head -n1)"
          if [[ -z "${PID:-}" ]]; then
            echo "Runner.Listener PID not found"; exit 1
          fi
          pull_env () {
            local key="$1"
            local val
            val="$(tr '\0' '\n' < /proc/$PID/environ | awk -F= -v k="$key" '$1==k{print substr($0,length($1)+2)}')"
            if [[ -z "${val:-}" ]]; then
              echo "Warning: $key not found in runner environment"
              return 0
            fi
            echo "::add-mask::$val"
            echo "$key=$val" >> "$GITHUB_ENV"
          }
          # Import what you need from the runner's systemd Environment=
          pull_env DB_PASSWORD
          pull_env DOCKER_USERNAME
          pull_env DOCKER_PASSWORD

      - name: Log in to Docker registry
        shell: bash
        run: echo "$DOCKER_PASSWORD" | docker login "$DOCKER_REGISTRY" -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker image with docker-compose
        working-directory: build/cloudserver
        shell: bash
        run: |
          docker-compose build restapi

      - name: Tag custom image
        shell: bash
        run: |
          docker tag cloudserver:latest "$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"

      - name: Push Docker image
        shell: bash
        run: |
          docker push "$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"

      - name: Update docker-compose.yml with pushed image
        shell: bash
        run: |
          sed -i '0,/image: cloudserver:latest/s|image: cloudserver:latest|image: '"$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"'|' build/cloudserver/docker-compose.yml

      - name: Copy docker-compose.yml and nginx.conf to /home/ubuntu
        shell: bash
        run: |
          cp build/cloudserver/docker-compose.yml /home/ubuntu/docker-compose.yml
          cp build/cloudserver/nginx.conf /home/ubuntu/nginx.conf

      - name: Restart docker compose
        working-directory: /home/ubuntu
        shell: bash
        run: |
          docker-compose down
          docker-compose up -d
